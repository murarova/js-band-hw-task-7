{"version":3,"sources":["redux/actions/notesActions.js","redux/reducers/notesReducer.js","redux/actions/modalActions.js","redux/reducers/modalReducer.js","redux/actions/filterActions.js","redux/reducers/filterReducer.js","redux/rootReducer.js","redux/store.js","components/NoteEditor/NoteEditor.js","components/DropDown/Dropdown.js","components/NoteItem/NoteItem.js","components/NoteList/NoteList.js","components/Filter/Filter.js","components/Modal/Modal.js","pages/Dashboard.js","pages/PageNotFound.js","App.js","index.js"],"names":["notesActionTypes","initialState","notes","note","title","text","priority","id","done","notesReducer","state","type","payload","filter","find","map","currentNote","newNote","modalActionTypes","isModalOpen","modalReducer","filterActionTypes","filterState","filterReducer","rootReducer","combineReducers","modal","store","createStore","devToolsEnhancer","NoteEditor","props","onChange","bind","onSubmit","e","this","setState","target","name","value","preventDefault","alert","onCancel","className","placeholder","rows","onBlur","onClick","Component","defaultProps","connect","Dropdown","items","el","key","NoteItem","isDropdawnOpen","timeout","close","clearTimeout","setTimeout","onDelete","onEdit","onDone","onClose","dispatch","deleteNote","notesActions","doneNote","toLowerCase","includes","Filter","Modal","backdropeRef","createRef","handleKeyPress","handleBackDropClick","window","addEventListener","removeEventListener","current","code","children","ref","Dashboard","onFilterChange","addNote","editNoteSuccess","closeModal","shortid","generate","editNoteCancel","openModal","editNote","searchNotes","length","search","filterActions","PageNotFound","App","exact","path","to","component","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.d88da8fb.chunk.js","sourcesContent":["export const notesActionTypes = {\n    ADD_NOTE: 'ADD_NOTE',\n    EDIT_NOTE: 'EDIT_NOTE',\n    EDIT_SUCCESS: 'EDIT_SUCCESS',\n    EDIT_NOTE_CANCEL: 'EDIT_NOTE_CANCEL',\n    DELETE_NOTE: 'DELETE_NOTE',\n    DONE_NOTE: 'DONE_NOTE',\n};\n\nexport const addNote = note => ({\n    type: notesActionTypes.ADD_NOTE,\n    payload: {\n        note,\n    },\n});\n\nexport const editNote = id => ({\n    type: notesActionTypes.EDIT_NOTE,\n    payload: {\n        id,\n    },\n});\n\nexport const editNoteSuccess = note => ({\n    type: notesActionTypes.EDIT_SUCCESS,\n    payload: {\n        note,\n    },\n});\n\nexport const editNoteCancel = () => ({\n    type: notesActionTypes.EDIT_NOTE_CANCEL,\n});\n\nexport const deleteNote = id => ({\n    type: notesActionTypes.DELETE_NOTE,\n    payload: {\n        id,\n    },\n});\n\nexport const doneNote = id => ({\n    type: notesActionTypes.DONE_NOTE,\n    payload: {\n        id,\n    },\n});\n","import { notesActionTypes } from '../actions/notesActions';\n\nconst initialState = {\n    notes: [],\n    note: {\n        title: '',\n        text: '',\n        priority: 'high',\n        id: '',\n        done: false,\n    },\n};\n\nconst notesReducer = (state = initialState, { type, payload }) => {\n    switch (type) {\n        case notesActionTypes.ADD_NOTE:\n            return {\n                ...state,\n                notes: [payload.note, ...state.notes],\n            };\n        case notesActionTypes.DELETE_NOTE:\n            return {\n                ...state,\n                notes: state.notes.filter(note => note.id !== payload.id),\n            };\n\n        case notesActionTypes.EDIT_NOTE:\n            return {\n                ...state,\n                note: state.notes.find(note => note.id === payload.id),\n            };\n\n        case notesActionTypes.EDIT_SUCCESS:\n            return {\n                ...state,\n                notes: state.notes.map(note =>\n                    note.id === payload.note.id ? payload.note : note,\n                ),\n                note: initialState.note,\n            };\n\n        case notesActionTypes.EDIT_NOTE_CANCEL:\n            return {\n                ...state,\n                note: initialState.note,\n            };\n\n        case notesActionTypes.DONE_NOTE:\n            // eslint-disable-next-line no-case-declarations\n            const currentNote = state.notes.find(\n                note => note.id === payload.id,\n            );\n            // eslint-disable-next-line no-case-declarations\n            const newNote = { ...currentNote, done: !currentNote.done };\n\n            return {\n                ...state,\n                notes: state.notes.map(note =>\n                    note.id === payload.id ? newNote : note,\n                ),\n            };\n\n        default:\n            return state;\n    }\n};\n\nexport default notesReducer;\n","export const modalActionTypes = {\n    OPEN_MODAL: 'OPEN_MODAL',\n    CLOSE_MODAL: 'CLOSE_MODAL',\n};\n\nexport const openModal = () => ({\n    type: modalActionTypes.OPEN_MODAL,\n    payload: true,\n});\n\nexport const closeModal = () => ({\n    type: modalActionTypes.CLOSE_MODAL,\n    payload: false,\n});\n","import { modalActionTypes } from '../actions/modalActions';\n\nconst initialState = {\n    isModalOpen: false,\n};\n\nconst modalReducer = (state = initialState, { type, payload }) => {\n    switch (type) {\n        case modalActionTypes.OPEN_MODAL:\n            return { ...state, isModalOpen: payload };\n        case modalActionTypes.CLOSE_MODAL:\n            return { ...state, isModalOpen: payload };\n        default:\n            return state;\n    }\n};\n\nexport default modalReducer;\n","export const filterActionTypes = {\n    SEARCH_NOTES: 'SEARCH_NOTES',\n};\n\nexport const searchNotes = search => {\n    return {\n        type: filterActionTypes.SEARCH_NOTES,\n        payload: {\n            ...search,\n        },\n    };\n};\n","import { filterActionTypes } from '../actions/filterActions';\n\nconst initialState = {\n    filterState: {\n        title: '',\n        priority: '',\n        done: '',\n    },\n};\n\nconst filterReducer = (state = initialState, { type, payload }) => {\n    switch (type) {\n        case filterActionTypes.SEARCH_NOTES:\n            return {\n                ...state,\n                filterState: { ...state.filterState, ...payload },\n            };\n\n        default:\n            return state;\n    }\n};\n\nexport default filterReducer;\n","import { combineReducers } from 'redux';\nimport notesReducer from './reducers/notesReducer';\nimport modalReducer from './reducers/modalReducer';\nimport filterReducer from './reducers/filterReducer';\n\nconst rootReducer = combineReducers({\n    notes: notesReducer,\n    modal: modalReducer,\n    filter: filterReducer,\n});\n\nexport default rootReducer;\n","import { createStore } from 'redux';\nimport { devToolsEnhancer } from 'redux-devtools-extension';\nimport rootReducer from './rootReducer';\n\nconst store = createStore(rootReducer, devToolsEnhancer());\n\nexport default store;\n","/* eslint-disable no-alert */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n// import * as notesActions from '../../redux/actions/notesActions';\nimport { connect } from 'react-redux';\n\nclass NoteEditor extends Component {\n    constructor(props) {\n        super(props);\n        this.state = props.note;\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    onSubmit(e) {\n        const { onSubmit } = this.props;\n        const { title, text, priority, done, id } = this.state;\n        e.preventDefault();\n        if (text && title) {\n            onSubmit(title, text, priority, id, done);\n        } else {\n            alert('Please, fill all form fields');\n        }\n    }\n\n    render() {\n        const { text, title } = this.state;\n        const { onCancel } = this.props;\n\n        return (\n            <div className=\"col-xs-10 col-sm-8 col-md-4\">\n                <div className=\"row\">\n                    <div className=\"col-xs-12\">\n                        <form className=\"form\" onSubmit={this.onSubmit}>\n                            <div className=\"form-group\">\n                                <p>Title:</p>\n                                <input\n                                    className=\"form-control\"\n                                    name=\"title\"\n                                    type=\"text\"\n                                    placeholder=\"Title\"\n                                    value={title}\n                                    onChange={this.onChange}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <p>Description:</p>\n                                <textarea\n                                    className=\"form-control\"\n                                    rows=\"5\"\n                                    placeholder=\"Description\"\n                                    name=\"text\"\n                                    value={text}\n                                    onChange={this.onChange}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <p className=\"modal-title\">Priority:</p>\n                                <select\n                                    className=\"form-control\"\n                                    name=\"priority\"\n                                    onBlur={this.onChange}\n                                >\n                                    <option value=\"high\">high</option>\n                                    <option value=\"normal\">normal</option>\n                                    <option value=\"low\">low</option>\n                                </select>\n                            </div>\n                            <div className=\"form-group\">\n                                <div className=\"actions\">\n                                    <button\n                                        className=\"btn btn-success\"\n                                        type=\"submit\"\n                                    >\n                                        Create\n                                    </button>\n                                    <button\n                                        className=\"btn btn-danger\"\n                                        type=\"submit\"\n                                        onClick={onCancel}\n                                    >\n                                        Cancel\n                                    </button>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nNoteEditor.defaultProps = {\n    note: {},\n};\n\nNoteEditor.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired,\n    note: PropTypes.PropTypes.shape({\n        title: PropTypes.string,\n        text: PropTypes.string,\n        priority: PropTypes.string,\n        id: PropTypes.string,\n        done: PropTypes.bool,\n    }),\n};\n\nconst mapStateToProps = state => ({\n    note: state.notes.note,\n});\n\nexport default connect(mapStateToProps)(NoteEditor);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Dropdown = ({ items }) => {\n    return (\n        <>\n            {items.map(el => (\n                <button\n                    type=\"button\"\n                    className={el.className}\n                    key={el.name}\n                    onClick={el.onClick}\n                >\n                    {el.name}\n                </button>\n            ))}\n        </>\n    );\n};\n\nDropdown.propTypes = {\n    items: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default Dropdown;\n","/* eslint-disable no-nested-ternary */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from '../DropDown/Dropdown';\n\nclass NoteItem extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isDropdawnOpen: false,\n            timeout: null,\n        };\n        this.onClick = this.onClick.bind(this);\n        this.close = this.close.bind(this);\n    }\n\n    componentWillUnmount() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n    }\n\n    onClick() {\n        this.setState(state => ({\n            isDropdawnOpen: !state.isDropdawnOpen,\n        }));\n    }\n\n    close() {\n        const timeout = setTimeout(() => {\n            this.setState({\n                isDropdawnOpen: false,\n            });\n        }, 100);\n        this.setState({ timeout });\n    }\n\n    render() {\n        const {\n            title,\n            text,\n            priority,\n            id,\n            done,\n            onDelete,\n            onEdit,\n            onDone,\n        } = this.props;\n        const { isDropdawnOpen } = this.state;\n\n        const items = [\n            {\n                name: 'Done',\n                className: 'btn btn-success dropdawn-btn',\n                onClick: onDone,\n            },\n            {\n                name: 'Edit',\n                className: 'btn btn-info dropdawn-btn',\n                onClick: onEdit,\n            },\n            {\n                name: 'Delete',\n                className: 'btn btn-danger dropdawn-btn',\n                onClick: onDelete,\n            },\n        ];\n\n        return (\n            <li className={done ? 'done note' : 'note'} key={id}>\n                <h3 className=\"title\">{title}</h3>\n                <p className=\"text\">{text}</p>\n                <div className=\"actions\">\n                    <button\n                        type=\"button\"\n                        className={\n                            priority === 'high'\n                                ? 'btn btn-danger'\n                                : priority === 'low'\n                                ? 'btn btn-info'\n                                : 'btn btn-primary'\n                        }\n                    >\n                        {priority}\n                    </button>\n                    <div className=\"dropdawn-wrapper\" onBlur={this.close}>\n                        <button\n                            type=\"button\"\n                            className=\"btn btn-warning\"\n                            onClick={this.onClick}\n                        >\n                            ...\n                        </button>\n\n                        {isDropdawnOpen && (\n                            <div className=\"dropdown\">\n                                <Dropdown\n                                    onClose={this.onClose}\n                                    items={items}\n                                />\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </li>\n        );\n    }\n}\n\nNoteItem.defaultProps = {\n    title: '',\n    text: '',\n    priority: 'high',\n    id: '',\n    done: false,\n};\n\nNoteItem.propTypes = {\n    onDelete: PropTypes.func.isRequired,\n    onEdit: PropTypes.func.isRequired,\n    onDone: PropTypes.func.isRequired,\n    title: PropTypes.string,\n    text: PropTypes.string,\n    priority: PropTypes.string,\n    id: PropTypes.string,\n    done: PropTypes.bool,\n};\n\nexport default NoteItem;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport NoteItem from '../NoteItem/NoteItem';\n\nimport * as notesActions from '../../redux/actions/notesActions';\n\nconst NoteList = ({ notes, deleteNote, onEdit, doneNote, filterState }) => (\n    <div className=\"row\">\n        <div className=\"col-xs-12\">\n            <ul className=\"note-list\">\n                {notes.map(note => {\n                    const { title, text, priority, id, done } = note;\n                    if (\n                        (note.title\n                            .toLowerCase()\n                            .includes(filterState.title.toLowerCase()) ||\n                            '') &&\n                        (note.done === filterState.done ||\n                            filterState.done === '') &&\n                        (note.priority === filterState.priority ||\n                            filterState.priority === '')\n                    ) {\n                        return (\n                            <NoteItem\n                                key={id}\n                                title={title}\n                                text={text}\n                                id={id}\n                                priority={priority}\n                                done={done}\n                                onDelete={() => deleteNote(id)}\n                                onEdit={() => onEdit(id)}\n                                onDone={() => doneNote(id)}\n                            />\n                        );\n                    }\n                    return false;\n                })}\n            </ul>\n        </div>\n    </div>\n);\n\nNoteList.propTypes = {\n    notes: PropTypes.arrayOf(PropTypes.object).isRequired,\n    deleteNote: PropTypes.func.isRequired,\n    onEdit: PropTypes.func.isRequired,\n    doneNote: PropTypes.func.isRequired,\n    filterState: PropTypes.shape({\n        title: PropTypes.string,\n        priority: PropTypes.string,\n        done: PropTypes.string,\n    }).isRequired,\n};\n\nconst mapStateToProps = state => ({\n    notes: state.notes.notes,\n    filterState: state.filter.filterState,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    deleteNote: id => dispatch(notesActions.deleteNote(id)),\n    doneNote: id => dispatch(notesActions.doneNote(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteList);\n","/* eslint-disable jsx-a11y/no-onchange */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ onClick, onChange }) => (\n    <>\n        <div className=\"row\">\n            <div className=\"col-xs-12\">\n                <form className=\"form-inline main-form\">\n                    <div className=\"col-xs-12 col-sm-5\">\n                        <div className=\"form-group width-100\">\n                            <input\n                                type=\"text\"\n                                className=\"form-control width-100\"\n                                name=\"title\"\n                                placeholder=\"search by title\"\n                                onChange={onChange}\n                            />\n                        </div>\n                    </div>\n\n                    <div className=\"col-xs-12 col-sm-2\">\n                        <div className=\"form-group width-100\">\n                            <select\n                                className=\"form-control width-100\"\n                                name=\"done\"\n                                onChange={onChange}\n                            >\n                                <option value=\"all\">all</option>\n                                <option value=\"open\">open</option>\n                                <option value=\"done\">done</option>\n                            </select>\n                        </div>\n                    </div>\n\n                    <div className=\"col-xs-12 col-sm-2\">\n                        <div className=\"form-group width-100\">\n                            <select\n                                className=\"form-control width-100\"\n                                name=\"priority\"\n                                onChange={onChange}\n                            >\n                                <option value=\"all\">all</option>\n                                <option value=\"high\">high</option>\n                                <option value=\"normal\">normal</option>\n                                <option value=\"low\">low</option>\n                            </select>\n                        </div>\n                    </div>\n\n                    <div className=\"col-xs-12 col-sm-3\">\n                        <div className=\"form-group width-100\">\n                            <button\n                                type=\"button\"\n                                className=\"btn btn-primary width-100\"\n                                onClick={onClick}\n                            >\n                                Create\n                            </button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </>\n);\n\nFilter.propTypes = {\n    onClick: PropTypes.func.isRequired,\n    onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable no-undef */\nimport React, { Component, createRef } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Modal extends Component {\n    constructor(props) {\n        super(props);\n        this.backdropeRef = createRef();\n\n        this.handleKeyPress = this.handleKeyPress.bind(this);\n        this.handleBackDropClick = this.handleBackDropClick.bind(this);\n    }\n\n    componentDidMount() {\n        window.addEventListener('keydown', this.handleKeyPress);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('keydown', this.handleKeyPress);\n    }\n\n    handleBackDropClick(e) {\n        const { onClose } = this.props;\n        const { current } = this.backdropeRef;\n        if (current && e.target !== current) return;\n        onClose();\n    }\n\n    handleKeyPress(e) {\n        const { onClose } = this.props;\n        if (e.code !== 'Escape') return;\n        onClose();\n    }\n\n    render() {\n        const { children } = this.props;\n        return (\n            <div\n                className=\"overlay\"\n                onClick={this.handleBackDropClick}\n                ref={this.backdropeRef}\n            >\n                {children}\n            </div>\n        );\n    }\n}\n\nModal.propTypes = {\n    onClose: PropTypes.func.isRequired,\n    children: PropTypes.element.isRequired,\n};\n\nexport default Modal;\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport NoteEditor from '../components/NoteEditor/NoteEditor';\nimport NoteList from '../components/NoteList/NoteList';\nimport Filter from '../components/Filter/Filter';\nimport Modal from '../components/Modal/Modal';\nimport '../index.css';\n\nimport * as modalActions from '../redux/actions/modalActions';\nimport * as notesActions from '../redux/actions/notesActions';\nimport * as filterActions from '../redux/actions/filterActions';\n\nclass Dashboard extends Component {\n    constructor(props) {\n        super(props);\n\n        this.onSubmit = this.onSubmit.bind(this);\n        this.onCancel = this.onCancel.bind(this);\n        this.onEdit = this.onEdit.bind(this);\n        this.onFilterChange = this.onFilterChange.bind(this);\n    }\n\n    onSubmit(title, text, priority, id, done) {\n        const { addNote, editNoteSuccess, closeModal } = this.props;\n        if (!id) {\n            const noteToAdd = {\n                done,\n                title,\n                text,\n                priority,\n                id: shortid.generate(),\n            };\n            addNote(noteToAdd);\n        } else {\n            const noteToAdd = {\n                done,\n                title,\n                text,\n                priority,\n                id,\n            };\n            editNoteSuccess(noteToAdd);\n        }\n        closeModal();\n    }\n\n    onCancel() {\n        const { editNoteCancel, closeModal } = this.props;\n        editNoteCancel();\n        closeModal();\n    }\n\n    onEdit(id) {\n        const { openModal, editNote } = this.props;\n        openModal();\n        editNote(id);\n    }\n\n    onFilterChange(e) {\n        const { searchNotes } = this.props;\n        if (e.target.value === 'all') {\n            const newFilterValue = { [e.target.name]: '' };\n            searchNotes({ ...newFilterValue });\n            return;\n        }\n        if (e.target.value === 'open') {\n            const newFilterValue = { [e.target.name]: false };\n            searchNotes({ ...newFilterValue });\n            return;\n        }\n        if (e.target.value === 'done') {\n            const newFilterValue = { [e.target.name]: true };\n            searchNotes({ ...newFilterValue });\n            return;\n        }\n        const newFilterValue = { [e.target.name]: e.target.value };\n\n        searchNotes({ ...newFilterValue });\n    }\n\n    render() {\n        const { isModalOpen, openModal, closeModal, notes } = this.props;\n        return (\n            <div className=\"row\">\n                <div className=\"col-xs-12\">\n                    <h2 className=\"text-center\">JS-BAND-HW-TASK-7</h2>\n                    <div>\n                        {isModalOpen && (\n                            <Modal onClose={closeModal}>\n                                <NoteEditor\n                                    onCancel={this.onCancel}\n                                    onSubmit={this.onSubmit}\n                                />\n                            </Modal>\n                        )}\n                        <Filter\n                            onChange={this.onFilterChange}\n                            onClick={openModal}\n                        />\n                        {notes.length > 0 && (\n                            <NoteList\n                                onEdit={this.onEdit}\n                                onDone={this.onDone}\n                            />\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDashboard.defaultProps = {\n    note: {},\n};\n\nDashboard.propTypes = {\n    notes: PropTypes.arrayOf(PropTypes.object).isRequired,\n    note: PropTypes.shape({\n        title: PropTypes.string,\n        text: PropTypes.string,\n        priority: PropTypes.string,\n        id: PropTypes.string,\n        done: PropTypes.bool,\n    }),\n    openModal: PropTypes.func.isRequired,\n    closeModal: PropTypes.func.isRequired,\n    addNote: PropTypes.func.isRequired,\n    editNote: PropTypes.func.isRequired,\n    isModalOpen: PropTypes.bool.isRequired,\n    editNoteSuccess: PropTypes.func.isRequired,\n    editNoteCancel: PropTypes.func.isRequired,\n    searchNotes: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    isModalOpen: state.modal.isModalOpen,\n    notes: state.notes.notes,\n    filterState: state.filter.filterState,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    openModal: () => dispatch(modalActions.openModal()),\n    closeModal: () => dispatch(modalActions.closeModal()),\n    addNote: note => dispatch(notesActions.addNote(note)),\n    editNote: id => dispatch(notesActions.editNote(id)),\n    editNoteSuccess: note => dispatch(notesActions.editNoteSuccess(note)),\n    editNoteCancel: () => dispatch(notesActions.editNoteCancel()),\n    searchNotes: search => dispatch(filterActions.searchNotes(search)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\n","import React from 'react';\n\nconst PageNotFound = () => (\n    <>\n        <h1>404</h1>\n        <p>Looks like the page you were looking for is no longer here.</p>\n    </>\n);\n\nexport default PageNotFound;\n","import React from 'react';\nimport { Switch, Redirect, Route } from 'react-router-dom';\nimport Dashboard from './pages/Dashboard';\nimport PageNotFound from './pages/PageNotFound';\n\nconst App = () => (\n    <>\n        <Switch>\n            <Redirect exact path=\"/\" to=\"/todos\" />\n            <Route path=\"/todos\" component={Dashboard} />\n            <Route component={PageNotFound} />\n        </Switch>\n    </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nimport App from './App';\n\nReactDOM.render(\n    <Provider store={store}>\n        <HashRouter basename=\"/\">\n            <App />\n        </HashRouter>\n    </Provider>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}